/**
 * @file Texture.h
 * @brief Header file for the Texture class.
 * This file defines the Texture class, which is responsible for loading and managing OpenGL textures.
 * It includes methods for loading textures from files, binding them for rendering, and checking their validity.
 * It also provides accessors for texture dimensions and a method to release the texture resources.
 * @author Ahmet Abdullah Gultekin
 * @date 2025-05-27
 * @note This class uses the stb_image library for image loading and OpenGL for texture management.
 */
#ifndef BILLIARDSHOW_TEXTURE_H
#define BILLIARDSHOW_TEXTURE_H

#pragma once

#include <string>
#include <GL/glew.h>

/** * @class Texture
 * @brief Class for handling OpenGL textures.
 * This class provides methods to load textures from files, bind them for rendering,
 * check their validity, and release resources when no longer needed.
 */
class Texture {
public:
    /**
     * @brief Default constructor for Texture.
     * Initializes the texture with default values.
     */
    Texture();

    /**
     * @brief Destructor for Texture.
     * Cleans up the OpenGL texture resources.
     */
    ~Texture();

    /**
     * @brief Loads a texture from a file.
     * @param path The path to the texture file.
     * @return True if the texture was loaded successfully, false otherwise.
     */
    bool LoadFromFile(const std::string &path);

    /**
     * @brief Binds the texture for rendering.
     * This method binds the texture to the current OpenGL context so it can be used in rendering.
     */
    void Bind() const;

    /**
     * @brief Checks if the texture is valid.
     * @return True if the texture is valid (i.e., it has been loaded successfully), false otherwise.
     */
    bool IsValid() const;

    /**
     * @brief Gets the OpenGL texture ID.
     * @return The OpenGL texture ID.
     */
    int GetWidth() const { return width; }

    /**
     * @brief Gets the OpenGL texture ID.
     * @return The OpenGL texture ID.
     */
    int GetHeight() const { return height; }

    /**
     * @brief Gets the OpenGL texture ID.
     * @return The OpenGL texture ID.
     */
    void Release();

private:
    /**
     * @brief The OpenGL texture ID.
     * This ID is generated by OpenGL when the texture is loaded.
     */
    GLuint id = 0;
    int width = 0, height = 0;
};

#endif //BILLIARDSHOW_TEXTURE_H
